plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

tasks.register('customVersionTask') {
    doLast {
        def pipelinenameEnv = System.getenv('GO_PIPELINE_NAME')
        def pipelinenamePro = System.getProperty('GO_PIPELINE_NAME')
        println "System pipelinenameEnv $pipelinenameEnv"
        println "System pipelinenamePro $pipelinenamePro"
    }
}

build.dependsOn(customVersionTask)


dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation 'com.aerospike:aerospike-client:6.1.9'
    implementation('com.aerospike:java-object-mapper:2.2.0')
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation("org.projectlombok:lombok")
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}

application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}



